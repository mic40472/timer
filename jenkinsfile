pipeline {
    agent any
    tools {
        git 'Default'  // Requires Git plugin installed
    }
    environment {
        PROJECT_ID = 'gcp-env-dev'
        CLUSTER = 'kube-cluster'
        ZONE = 'us-central1-c'
        ARTIFACTORY = 'us-central1-docker.pkg.dev/gcp-env-dev/image-repo/pro-1'
        NAMESPACE = 'suresh'  // Your namespace name here
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [[$class: 'CleanBeforeCheckout']],
                    userRemoteConfigs: [[
                        credentialsId: 'github-pat',
                        url: 'git@github.com:mic40472/timer.git'
                    ]]
                ])
            }
        }

        stage('Setup Environment') {
            steps {
                script {
                    // Install Node.js if missing
                    if (!sh(returnStatus: true, script: 'which node')) {
                        sh '''
                            curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
                            sudo apt-get install -y nodejs
                        '''
                    }
                    // Verify Docker access
                    sh 'docker ps >/dev/null'  // Test Docker connectivity
                }
            }
        }

        stage('Install Packages') {
            steps {
                sh 'npm install'
            }
        }

        stage('Docker Build') {
            steps {
                sh '''
                    docker build -t ${ARTIFACTORY}:${BUILD_NUMBER} .
                '''
            }
        }

        stage('Push to Artifact Registry') {
            steps {
                withCredentials([file(credentialsId: 'gke-key', variable: 'GC_KEY')]) {
                    sh '''
                        gcloud auth activate-service-account --key-file=$GC_KEY
                        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
                        docker push ${ARTIFACTORY}:${BUILD_NUMBER}
                    '''
                }
            }
        }

        stage('Deploy to GKE') {
            steps {
                withCredentials([file(credentialsId: 'gke-key', variable: 'GC_KEY')]) {
                    sh '''
                        gcloud auth activate-service-account --key-file=$GC_KEY
                        gcloud config set project $PROJECT_ID
                        gcloud container clusters get-credentials $CLUSTER --zone $ZONE

                        # Ensure the deployment exists in the correct namespace (suresh)
                        kubectl get deployment pro1 --namespace=$NAMESPACE || kubectl apply -f k8s/deployment.yaml --namespace=$NAMESPACE

                        # Set the image for the deployment
                        kubectl set image deployment/pro1 node-app=${ARTIFACTORY}:${BUILD_NUMBER} --namespace=$NAMESPACE
                    '''
                }
            }
        }
    }

    post {
        always {
            sh 'docker rmi ${ARTIFACTORY}:${BUILD_NUMBER} || true'
        }
    }
}
