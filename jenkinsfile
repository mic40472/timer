pipeline {
    agent any

    environment {
        GOOGLE_APPLICATION_CREDENTIALS = credentials('gke-key') // Jenkins credential ID for GCP service account
        PROJECT_ID = 'gcp-env-dev'
        CLUSTER = 'kube-cluster'
        ZONE = 'us-central1-c'
        ARTIFACTORY = 'us-central1-docker.pkg.dev/gcp-env-dev/image-repo/pro-1'
    }

    stages {
        stage('Add GitHub to Known Hosts') {
            steps {
                sh '''
                    mkdir -p ~/.ssh
                    ssh-keyscan github.com >> ~/.ssh/known_hosts
                '''
            }
        }

        stage('Clone Repo') {
            steps {
                git credentialsId: 'github-pat', url: 'git@github.com:mic40472/timer.git'
            }
        }

        stage('Install Packages') {
            steps {
                sh 'npm install'
            }
        }

        stage('Docker Build') {
            steps {
                sh 'docker build -t ${ARTIFACTORY}:${BUILD_NUMBER} .'
            }
        }

        stage('Push to Artifact Registry') {
            steps {
                withCredentials([file(credentialsId: 'gke-key', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                    sh '''
                        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
                        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
                        docker push ${ARTIFACTORY}:${BUILD_NUMBER}
                    '''
                }
            }
        }

        stage('Deploy to GKE') {
            steps {
                sh '''
                    gcloud config set project $PROJECT_ID
                    gcloud container clusters get-credentials $CLUSTER --zone $ZONE
                    kubectl apply -f k8s/
                    kubectl set image deployment/app-deployment node-app=${ARTIFACTORY}:${BUILD_NUMBER}
                '''
            }
        }
    }
}
